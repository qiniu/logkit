package unicodeh

import "unicode"

// Unicode property "Noncharacter_Code_Point" (known as "NChar", "Noncharacter_Code_Point").
// Kind of property: "Binary".
// Based on file "PropList.txt".
var (
	NoncharacterCodePointNo  = noncharacterCodePointNo  // Value "No" (known as "N", "No", "F", "False").
	NoncharacterCodePointYes = noncharacterCodePointYes // Value "Yes" (known as "Y", "Yes", "T", "True").
)

var (
	noncharacterCodePointNo  = &unicode.RangeTable{[]unicode.Range16{{0x0, 0xfdcf, 0x1}, {0xfdf0, 0xfffd, 0x1}}, []unicode.Range32{{0x10000, 0x1fffd, 0x1}, {0x20000, 0x2fffd, 0x1}, {0x30000, 0x3fffd, 0x1}, {0x40000, 0x4fffd, 0x1}, {0x50000, 0x5fffd, 0x1}, {0x60000, 0x6fffd, 0x1}, {0x70000, 0x7fffd, 0x1}, {0x80000, 0x8fffd, 0x1}, {0x90000, 0x9fffd, 0x1}, {0xa0000, 0xafffd, 0x1}, {0xb0000, 0xbfffd, 0x1}, {0xc0000, 0xcfffd, 0x1}, {0xd0000, 0xdfffd, 0x1}, {0xe0000, 0xefffd, 0x1}, {0xf0000, 0xffffd, 0x1}, {0x100000, 0x10fffd, 0x1}}, 0}
	noncharacterCodePointYes = &unicode.RangeTable{[]unicode.Range16{{0xfdd0, 0xfdef, 0x1}, {0xfffe, 0xffff, 0x1}}, []unicode.Range32{{0x1fffe, 0x1ffff, 0x1}, {0x2fffe, 0x2ffff, 0x1}, {0x3fffe, 0x3ffff, 0x1}, {0x4fffe, 0x4ffff, 0x1}, {0x5fffe, 0x5ffff, 0x1}, {0x6fffe, 0x6ffff, 0x1}, {0x7fffe, 0x7ffff, 0x1}, {0x8fffe, 0x8ffff, 0x1}, {0x9fffe, 0x9ffff, 0x1}, {0xafffe, 0xaffff, 0x1}, {0xbfffe, 0xbffff, 0x1}, {0xcfffe, 0xcffff, 0x1}, {0xdfffe, 0xdffff, 0x1}, {0xefffe, 0xeffff, 0x1}, {0xffffe, 0xfffff, 0x1}, {0x10fffe, 0x10ffff, 0x1}}, 0}
)
