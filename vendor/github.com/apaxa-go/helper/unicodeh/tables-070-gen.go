package unicodeh

import "unicode"

// Unicode property "Quotation_Mark" (known as "QMark", "Quotation_Mark").
// Kind of property: "Binary".
// Based on file "PropList.txt".
var (
	QuotationMarkNo  = quotationMarkNo  // Value "No" (known as "N", "No", "F", "False").
	QuotationMarkYes = quotationMarkYes // Value "Yes" (known as "Y", "Yes", "T", "True").
)

var (
	quotationMarkNo  = &unicode.RangeTable{[]unicode.Range16{{0x0, 0x21, 0x1}, {0x23, 0x26, 0x1}, {0x28, 0xaa, 0x1}, {0xac, 0xba, 0x1}, {0xbc, 0x2017, 0x1}, {0x2020, 0x2038, 0x1}, {0x203b, 0x2e41, 0x1}, {0x2e43, 0x300b, 0x1}, {0x3010, 0x301c, 0x1}, {0x3020, 0xfe40, 0x1}, {0xfe45, 0xff01, 0x1}, {0xff03, 0xff06, 0x1}, {0xff08, 0xff61, 0x1}, {0xff64, 0xffff, 0x1}}, []unicode.Range32{{0x10000, 0x10ffff, 0x1}}, 4}
	quotationMarkYes = &unicode.RangeTable{[]unicode.Range16{{0x22, 0x27, 0x5}, {0xab, 0xbb, 0x10}, {0x2018, 0x201f, 0x1}, {0x2039, 0x203a, 0x1}, {0x2e42, 0x300c, 0x1ca}, {0x300d, 0x300f, 0x1}, {0x301d, 0x301f, 0x1}, {0xfe41, 0xfe44, 0x1}, {0xff02, 0xff07, 0x5}, {0xff62, 0xff63, 0x1}}, nil, 2}
)
