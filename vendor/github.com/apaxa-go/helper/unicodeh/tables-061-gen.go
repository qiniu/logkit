package unicodeh

import "unicode"

// Unicode property "Other_Grapheme_Extend" (known as "OGr_Ext", "Other_Grapheme_Extend").
// Kind of property: "Binary".
// Based on file "PropList.txt".
var (
	OtherGraphemeExtendNo  = otherGraphemeExtendNo  // Value "No" (known as "N", "No", "F", "False").
	OtherGraphemeExtendYes = otherGraphemeExtendYes // Value "Yes" (known as "Y", "Yes", "T", "True").
)

var (
	otherGraphemeExtendNo  = &unicode.RangeTable{[]unicode.Range16{{0x0, 0x9bd, 0x1}, {0x9bf, 0x9d6, 0x1}, {0x9d8, 0xb3d, 0x1}, {0xb3f, 0xb56, 0x1}, {0xb58, 0xbbd, 0x1}, {0xbbf, 0xbd6, 0x1}, {0xbd8, 0xcc1, 0x1}, {0xcc3, 0xcd4, 0x1}, {0xcd7, 0xd3d, 0x1}, {0xd3f, 0xd56, 0x1}, {0xd58, 0xdce, 0x1}, {0xdd0, 0xdde, 0x1}, {0xde0, 0x200b, 0x1}, {0x200d, 0x302d, 0x1}, {0x3030, 0xff9d, 0x1}, {0xffa0, 0xffff, 0x1}}, []unicode.Range32{{0x10000, 0x1133d, 0x1}, {0x1133f, 0x11356, 0x1}, {0x11358, 0x114af, 0x1}, {0x114b1, 0x114bc, 0x1}, {0x114be, 0x115ae, 0x1}, {0x115b0, 0x1d164, 0x1}, {0x1d166, 0x1d16d, 0x1}, {0x1d173, 0xe001f, 0x1}, {0xe0080, 0x10ffff, 0x1}}, 0}
	otherGraphemeExtendYes = &unicode.RangeTable{[]unicode.Range16{{0x9be, 0x9d7, 0x19}, {0xb3e, 0xb57, 0x19}, {0xbbe, 0xbd7, 0x19}, {0xcc2, 0xcd5, 0x13}, {0xcd6, 0xd3e, 0x68}, {0xd57, 0xdcf, 0x78}, {0xddf, 0x200c, 0x122d}, {0x302e, 0x302f, 0x1}, {0xff9e, 0xff9f, 0x1}}, []unicode.Range32{{0x1133e, 0x11357, 0x19}, {0x114b0, 0x114bd, 0xd}, {0x115af, 0x1d165, 0xbbb6}, {0x1d16e, 0x1d172, 0x1}, {0xe0020, 0xe007f, 0x1}}, 0}
)
